import requests
from bs4 import BeautifulSoup
import csv
import telebot
from telebot import types
from datetime import datetime

bot = telebot.TeleBot('6165404922:AAHg7bUiRP5Ism12SssmJ1mOOWLKB_Argys')
coordinates = {
    '–ë–∞—É—ã—Ä–∂–∞–Ω –ú–æ–º—ã—à—É–ª—ã': '43.216438,76.837982',
    '–°–∞—Ä—ã–∞—Ä–∫–∞': '43.223665,76.858230',
    '–ú–æ—Å–∫–≤–∞': '43.230834,76.867593',
    '–°–∞–π—Ä–∞–Ω': '43.236646,76.876991',
    '–ê–ª–∞—Ç–∞—É': '43.238726,76.897613',
    '–ú—É—Ö—Ç–∞—Ä–∞ –ê—É—ç–∑–æ–≤–∞': '43.240085,76.917960',
    '–ë–∞–π–∫–æ–Ω—ã—Ä': '43.240208,76.927250',
    '–ê–±–∞—è': '43.242804,76.949849',
    '–ê–ª–º–∞–ª—ã': '43.251635,76.946115',
    '–ñ–∏–±–µ–∫-–ñ–æ–ª—ã': '43.260379,76.945800',
    '–†–∞–π—ã–º–±–µ–∫-–ë–∞—Ç—ã—Ä–∞': '43.271375,76.944659'
}

def get_time():
    site = requests.get('http://metroalmaty.kz/?q=ru/schedule-list').text
    soup = BeautifulSoup(site, 'html.parser')
    table = soup.tbody.find_all('tr')
    head = ['–°—Ç–∞–Ω—Ü–∏–∏','–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è (–†–∞–π—ã–º–±–µ–∫ –±–∞—Ç—ã—Ä–∞ - –ë. –ú–æ–º—ã—à—É–ª—ã)', '–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è (–ë. –ú–æ–º—ã—à—É–ª—ã - –†–∞–π—ã–º–±–µ–∫ –±–∞—Ç—ã—Ä–∞)']
    rows = []
    with open('time.csv', 'w') as time_file:
        f = csv.writer(time_file)
        for i in table:
            column = i.find_all('td')
            row = []
            for j in column:
                row.append(j.text)
            rows.append(row)
        f.writerow(head)
        f.writerows(rows)
        
    return rows

@bot.message_handler(commands=['start'])
def start(message):
    name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    if name == None:
        name = last_name
    if name == None:
        name = username
    if name == None:
        name = 'Anonim'
    to_rep = bot.send_message(message.chat.id, f"""–ü—Ä–∏–≤–µ—Ç, <strong>{name}</strong>üñêüèª\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–µ—Ç—Ä–æ—Ç–∏–∫, —è –∑–Ω–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–≤ –≤ –º–µ—Ç—Ä–æ –ê–ª–º–∞—Ç—ã. –ù–∞–ø–∏—à–∏ <strong>/help</strong> –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.""" , parse_mode='html')
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    ff=types.KeyboardButton('–ë–ª–∏–∂–∞–π—à–∞—è —Å—Ç–∞–Ω—Ü–∏—è', request_location=True)
    new_button = types.KeyboardButton('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è')
    keyboard.add(ff, new_button)

    bot.reply_to(to_rep, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=keyboard)

@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∞ –æ–ø—Ä–µ–¥–µ–ª–Ω–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ\n\n\n<strong>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è -> –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é</strong>\n\n\n–ú–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à—É—é –∫ –≤–∞–º —Å—Ç–∞–Ω—Ü–∏—é –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <strong>–ë–ª–∏–∂–∞–π—à–∞—è —Å—Ç–∞–Ω—Ü–∏—è</strong>', parse_mode='html')

@bot.message_handler(content_types=['location'])
def handle_location(message):
    api_key = 'B1CmKcutpNFpQlVisGnaSACUCblDfs8p'
    latitude = message.location.latitude
    longitude = message.location.longitude
    start_location = f'{latitude},{longitude}'
    station = ''
    min_len = 999999999999999999
    for i, j in coordinates.items():
        end_location = j
        url = f'https://api.tomtom.com/routing/1/calculateRoute/{start_location}:{end_location}/json?key={api_key}'

        response = requests.get(url)

        if response.status_code == 200:
            # Success! The response content is in JSON format.
            json_response = response.json()
            lengthInMeters = json_response['routes'][0]['summary']['lengthInMeters']
            if (lengthInMeters < min_len):
                min_len = lengthInMeters
                station = i

    bot.send_message(message.chat.id, f'–ë–ª–∏–∂–∞–π—à–∞—è —Å—Ç–∞–Ω—Ü–∏—è - {station}')

@bot.callback_query_handler(func=lambda call: True)
def answer_to_callback(call):
    if call.data == 'continue':
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.add('<- –ù–∞–∑–∞–¥')
        for i in get_time():
            keyboard.add(i[0])
        bot.reply_to(call.message, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é',reply_markup=keyboard)
    elif call.data == 'end':
        name = call.from_user.first_name
        bot.send_message(call.message.chat.id, f'–î–æ —Å–≤–∏–¥–∞–Ω–∏—è {name} \n\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!')

@bot.message_handler()
def get_messages(message):
    try:
        for i in get_time():
            if message.text == i[0]:
                time = datetime.now()
                time1 = i[1]
                time2 = i[2]
                keyboard = telebot.types.InlineKeyboardMarkup()
                button1 = telebot.types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='continue')
                button2 = telebot.types.InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data='end')
                keyboard.add(button1, button2)
                if len(time1) == 0:
                    time1 = "–ö–æ–Ω–µ—á–Ω–∞—è"
                if len(time2) == 0:
                    time2 = '–ö–æ–Ω–µ—á–Ω–∞—è'
                remove_chat_buttons(message.chat.id)
                bot.send_message(message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è - {time.strftime("%H:%M:%S")}\n\n\n–°—Ç–∞–Ω—Ü–∏—è - {i[0]}\n–û—Ç {i[0]} –î–æ –ë–∞—É—ã—Ä–∂–∞–Ω –ú–æ–º—ã—à—É–ª—ã:\n{time1}\n\n–û—Ç {i[0]} –î–æ –†–∞–π—ã–º–±–µ–∫ –ë–∞—Ç—ã—Ä–∞:\n{time2}', reply_markup=keyboard)
                telebot.types.ReplyKeyboardRemove()
                return
    except:
        bot.send_message(message.chat.id, '–Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–Ω—Ü–∏–∏')

    if message.text == '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è':
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.add('<- –ù–∞–∑–∞–¥')
        for i in get_time():
            keyboard.add(i[0])
        bot.reply_to(message, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é',reply_markup=keyboard)
        return
    
    if message.text == '<- –ù–∞–∑–∞–¥':
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        ff=types.KeyboardButton('–ë–ª–∏–∂–∞–π—à–∞—è —Å—Ç–∞–Ω—Ü–∏—è', request_location=True)
        new_button = types.KeyboardButton('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è')
        keyboard.add(ff, new_button)

        bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=keyboard)    
        return

    bot.send_message(message.chat.id, f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã –∫–∞–∫ \n\n<strong>{message.text}</strong>', parse_mode='html')


def remove_chat_buttons(chat_id: int, 
                              msg_text: str = r"_It is not the message you are looking for\.\.\._"):
    """Deletes buttons below the chat.
    For now there are no way to delete kbd other than inline one, check
        https://core.telegram.org/bots/api#updating-messages.
    """
    msg = bot.send_message(chat_id,
                                 msg_text,
                                 reply_markup=telebot.types.ReplyKeyboardRemove(),
                                 parse_mode="MarkdownV2")
    bot.delete_message(chat_id, msg.id)

bot.infinity_polling()